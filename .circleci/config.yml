# Very minimal setup, just for the sake of automated testing

version: 2.1

orbs:
  android: circleci/android@2.5.0

_defaults:
  - &restore_gradle_cache
    restore_cache:
      name: Restore Gradle Cache
      key: jars-{{ checksum "build.gradle" }}
  - &download_dependencies
    run:
      name: Download Dependencies
      command: ./gradlew androidDependencies
  - &save_gradle_cache
    save_cache:
      paths:
        - ~/.gradle
      key: jars-{{ checksum "build.gradle" }}
  - &run_tests
    run:
      name: Run Tests
      command: ./gradlew test
  - &run_connected_android_tests
      run:
        name:  Run Connected Android Tests
        command: ./gradlew connectedAndroidTest
  - &compress_report
    run:
      name: Compress Report
      command: tar -cvf report.tar -C ./build/reports .
  - &store_report
    store_artifacts:
      path: report.tar
      destination: report.tar
  - &store_test_results
    store_test_results:
      path: build/test-results


commands:
  store_instrument_results:
    description: "Store instrument test results"
    steps:
      - store_test_results:
          path: test-host/build/reports/androidTests/connected
      - run:
          name: Compress Report
          command: tar -cvf instrument-report.tar -C ./test-host/build/reports/androidTests/connected .
      - store_artifacts:
          path: instrument-report.tar
          destination: instrument-report.tar
      - store_artifacts:
          path: test-host/build/outputs/androidTest-results/connected/test-result.pb
          destination: test-result.pb

  run_instrument_tests:
    description: "Run instrument tests"
    parameters:
      api_level:
        type: "string"
    steps:
      - checkout
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-<<parameters.api_level>>;google_apis;x86_64
      - store_instrument_results

  run_local_tests:
    description: "Run unit tests"
    steps:
      - checkout
      - *restore_gradle_cache
      - *download_dependencies
      - *save_gradle_cache
      - *run_tests
      - *compress_report
      - *store_report
      - *store_test_results


jobs:
  local_tests:
    docker:
      - image: cimg/android:2024.04.1
    steps:
      - run_local_tests

  instrument_tests_level_34:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '34'

  instrument_tests_level_33:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '33'

  instrument_tests_level_32:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '32'

  instrument_tests_level_31:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '31'

  instrument_tests_level_30:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '30'

  instrument_tests_level_29:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - run_instrument_tests:
          api_level: '29'

  instrument_tests_level_28:
    executor:
      name: android/android-machine
      resource-class: large
      tag: "2024.04.1"
    steps:
      - checkout
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-28;google_apis;x86
      - store_instrument_results


workflows:
  version: 2
  test:
    jobs:
      - local_tests
      - instrument_tests_level_34
      - instrument_tests_level_33
      - instrument_tests_level_32
      - instrument_tests_level_31
      - instrument_tests_level_30
      - instrument_tests_level_29
      - instrument_tests_level_28
